At 0 do StartIrond();

At 5 do StartVisitmetaDataservice();

#At 6 do Break(message => Done - MAP Server and VisITMeta Dataservice started - Next - VisITMeta GUI and irongpm and ironloggui);

At 10 do StartVisitmetaGUI();

At 12 do DeviceIp(
	device => irongpm,
	ip-address => 10.0.0.6,
	mode => update,
	ifmap-user => irongpm,
	ifmap-pass => irongpm);

At 14 do StartIrongpm();

#At 15 do Break(message => Step 1a - Infrastructure self publish - DHCP);

At 16 do SelfPublish(
	service-type => dhcp-server,
	service-name => DHCP,
	service-port => 67,
	implementation-name => ISC DHCP Server,
	implementation-version => 0.1,
	device => irondhcp-dhcp-server,
	ip => 10.0.0.1,
	ifmap-user => irondhcp,
	ifmap-pass => irondhcp);
	
At 18 do IronDhcpEntry(
	ip => 10.0.0.2,
	mac => aa:bb:cc:dd:ee:aa,
	discoverer => irondhcp-dhcp-server,
	ifmap-user => irondhcp,
	ifmap-pass => irondhcp);

At 20 do IronDhcpEntry(
	ip => 10.0.0.3,
	mac => aa:bb:cc:dd:ee:bb,
	discoverer => irondhcp-dhcp-server,
	ifmap-user => irondhcp,
	ifmap-pass => irondhcp);

At 22 do IronDhcpEntry(
	ip => 10.0.0.4,
	mac => aa:bb:cc:dd:ee:cc,
	discoverer => irondhcp-dhcp-server,
	ifmap-user => irondhcp,
	ifmap-pass => irondhcp);

At 24 do IronDhcpEntry(
	ip => 10.0.0.5,
	mac => aa:bb:cc:dd:ee:dd,
	discoverer => irondhcp-dhcp-server,
	ifmap-user => irondhcp,
	ifmap-pass => irondhcp);

At 26 do IronDhcpEntry(
	ip => 10.0.0.6,
	mac => aa:bb:cc:dd:ee:ee,
	discoverer => irondhcp-dhcp-server,
	ifmap-user => irondhcp,
	ifmap-pass => irondhcp);

#At 27 do Break(message => Step 1b - Infrastructure self publish - other components);
	
At 30 do SelfPublish(
	service-type => pdp,
	service-name => radius,
	service-port => 1812,
	implementation-name => FreeRADIUS,
	implementation-version => 3.0,
	device => freeradius-pdp,
	ip => 10.0.0.2,
	ifmap-user => irongenlog-freeradius,
	ifmap-pass => irongenlog-freeradius);
	
At 32 do SelfPublish(
	service-type => vulnerability scanner,
	service-name => openvas,
	service-port => 9390,
	implementation-name => OpenVAS,
	implementation-version => 8.0,
	device => openvas,
	ip => 10.0.0.3,
	ifmap-user => ironvas,
	ifmap-pass => ironvas);
		
#At 34 do SelfPublish(
#	service-type => network monitor,
#	service-name => snort,
#	service-port => 67,
#	implementation-name => Snort,
#	implementation-version => 0.1,
#	device => snort,
#	ip => 10.0.0.4,
#	ifmap-user => decomap-snort,
#	ifmap-pass => decomap-snort);

#At 36 do DeviceIp(
#	device => nmap,
#	ip-address => 10.0.0.5,
#	mode => update,
#	ifmap-user => ironnmap,
#	ifmap-pass => ironnmap);

#At 37 do Break(message => Step 2 - Service detection via req-for-investigation);

#At 38 do IronDhcpEntry(
#	ip => 10.0.0.10,
#	mac => bb:bb:cc:dd:ee:aa,
#	discoverer => irondhcp-dhcp-server,
#	ifmap-user => irondhcp,
#	ifmap-pass => irondhcp);

#At 40 do InvestigationRequested(
#	device => irondhcp-dhcp-server,
#	mac => bb:bb:cc:dd:ee:aa,
#	qualifier => nmap,
#	ifmap-user => irondhcp,
#	ifmap-pass => irondhcp);

#At 45 do NmapScan(
#	discoverer => nmap,
#	service-type => database-server,
#	service-name => database-server,
#	service-ip => 10.0.0.10,
#	service-port => 3306,
#	impl-name => MySQL Server,
#	impl-version => 1.0,
#	ifmap-user => ironnmap,
#	ifmap-pass => ironnmap);

At 34 do IronDhcpEntry(
	ip => 10.0.0.11,
	mac => bb:bb:cc:dd:ee:bb,
	discoverer => irondhcp-dhcp-server,
	ifmap-user => irondhcp,
	ifmap-pass => irondhcp);

At 36 do InvestigationRequested(
	device => irondhcp-dhcp-server,
	mac => bb:bb:cc:dd:ee:bb,
	qualifier => nmap:openvas,
	ifmap-user => irondhcp,
	ifmap-pass => irondhcp);

#At 27 do NmapScan(
#	discoverer => nmap,
#	service-type => web-server,
#	service-name => web-server-productive,
#	service-ip => 10.0.0.11,
#	service-port => 80,
#	impl-name => Apache HTTP Server,
#	impl-version => 2.4.23,
#	ifmap-user => ironnmap,
#	ifmap-pass => ironnmap);

# event via OpenVAS
#At 28 do VulnerabilityDetected(
#	ip-address => 10.0.0.11,
#	event-name => CVE-2016-8740 Denial of Service Vulnerability,
#	discoverer-id => ironvas:OpenVASv8.0,
#	event-magnitude => 50,
#	event-confidence => 100,
#	event-significance => important,
#	vulnerability-uri => CVE-2016-8740,
#	ifmap-user => ironvas,
#	ifmap-pass => ironvas);

# vulnerability via not-implemented mapping software
At 40 do InitVulnerableInfrastructure(
	discoverer => nmap,
	service-type => web-server,
	service-name => web-server-productive,
	service-ip => 10.0.0.11,
	service-port => 80,
	impl-name => Apache Server,
	impl-version => 2.4.23,
	vulnerability-type => CVE,
	vulnerability-value => CVE-2016-8740,
	ifmap-user-nmap => ironnmap,
	ifmap-pass-nmap => ironnmap,
	ifmap-user-vas => ironvas,
	ifmap-pass-vas => ironvas);

#At 41 do Break(message => Step 3 - Two Endpoints and Users connect and login);

At 45 do IronDhcpEntry(
	ip => 10.0.0.20,
	mac => cc:bb:cc:dd:ee:aa,
	discoverer => irondhcp-dhcp-server,
	ifmap-user => irondhcp,
	ifmap-pass => irondhcp);

At 47 do InvestigationRequested(
	device => irondhcp-dhcp-server,
	mac => cc:bb:cc:dd:ee:aa,
	qualifier => nmap:openvas,
	ifmap-user => irondhcp,
	ifmap-pass => irondhcp);

At 55 do IrongenlogFreeradiusConnect(
	access-request => ar:1,
	pdp => radius-pdp,
	ip => 10.0.0.20,
	mac => cc:bb:cc:dd:ee:aa,
	device => Google Nexus,
	role => user:finance,
	name => Bob,
	login-success => true,
	radius-service-name => radius,
	radius-service-type => pdp,
	radius-service-port => 1812,
	ifmap-user => irongenlog-freeradius,
	ifmap-pass => irongenlog-freeradius);
	
At 65 do IronDhcpEntry(
	ip => 10.0.0.23,
	mac => cc:bb:cc:dd:ee:bb,
	discoverer => irondhcp-dhcp-server,
	ifmap-user => irondhcp,
	ifmap-pass => irondhcp);

At 67 do InvestigationRequested(
	device => irondhcp-dhcp-server,
	mac => cc:bb:cc:dd:ee:bb,
	qualifier => nmap:openvas,
	ifmap-user => irondhcp,
	ifmap-pass => irondhcp);

At 75 do IrongenlogFreeradiusConnect(
	access-request => ar:2,
	pdp => radius-pdp,
	ip => 10.0.0.23,
	mac => cc:bb:cc:dd:ee:bb,
	device => Google Nexus,
	role => user:finance,
	name => Alice,
	login-success => true,
	radius-service-name => radius,
	radius-service-type => pdp,
	radius-service-port => 1812,
	ifmap-user => irongenlog-freeradius,
	ifmap-pass => irongenlog-freeradius);

#At 76 do Break(message => Step 4a - Endpoint 1 attacks webserver - CVE identical - Detected by Snort);

# by decomap-snort
At 85 do AttackDetected(
		service => web-server,
		host => web-server-productive,
		port => 80,
		source-ip => 10.0.0.20,
		rule => 1-41688,
		ref-type => CVE,
		ref-id => CVE-2016-8740,
		comment => Apache HTTP Server mod_http2 denial of service attempt,
		ifmap-user => decomap-snort,
		ifmap-pass => decomap-snort);

# running irongpm will publish unexpectedBehavior because of rule 1 (correctly) and rules 2 and 3 (uncorrectly) unto attacker's IP (10.0.0.20)

#At 86 do Break(message => Step 4b - Endpoint 2 attacks webserver - CVE not identical - Detected by Snort);

# by decomap-snort
At 95 do AttackDetected(
		service => web-server,
		host => web-server-productive,
		port => 80,
		source-ip => 10.0.0.23,
		rule => 1-2580,
		ref-type => CVE,
		ref-id => CVE-2004-0492,
		comment => DoS Exec Code Overflow via server negative Content-Length attempt,
		ifmap-user => decomap-snort,
		ifmap-pass => decomap-snort);

# running irongpm will publish unexpectedBehavior because of rules 2 and 3 unto attacker's IP (10.0.0.23)

At 100 do Break(message => Step 5 - Purge all data);

At 101 do PurgeMetadata(
	ifmap-user => irongenlog-freeradius,
	ifmap-pass => irongenlog-freeradius);
At 101 do PurgeMetadata(
	ifmap-user => decomap-snort,
	ifmap-pass => decomap-snort);
At 101 do PurgeMetadata(
	ifmap-user => ironnmap,
	ifmap-pass => ironnmap);
At 101 do PurgeMetadata(
	ifmap-user => ironvas,
	ifmap-pass => ironvas);
At 101 do PurgeMetadata(
	ifmap-user => irondhcp,
	ifmap-pass => irondhcp);

At 102 do Break(message => Agenda finished);
